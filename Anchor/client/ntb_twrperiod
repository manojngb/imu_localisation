#!/usr/bin/python

# -- TCP --
import socket
import sys

# -- imports --
import os
import re
import serial
import time
import numpy as np
import collections
import struct
import subprocess

# TCP port number
portnum = 23458

def readlines(sock, recv_buffer=64, delim='\n'):
	buffer = ''
	data = True
	while data:
		data = sock.recv(recv_buffer)
		buffer += data

		while buffer.find(delim) != -1:
			line, buffer = buffer.split('\n', 1)
			yield line
	return



# get hostname from commandline input
if len(sys.argv) != 3:
	print 'Usage: ntb_twrperiod <hostname> <period (0=off, 100ms->25500ms)'
	sys.exit(1)

hostname = sys.argv[1]
period = int(sys.argv[2])

if (period > 0 and period < 10) or (period > 2550):
	print 'Error: period must be 0 or between 10 and 2550 ms'
	sys.exit(1)

server_address = (hostname, 23458)

# wait for ping from node
print 'contacting node...'
max_pings = 5
pings = 0
for p in range(max_pings):
	ping = subprocess.Popen(["ping", "-c", "1", sys.argv[2]], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
	resp, err = ping.communicate()
	if not re.search('Unreachable', resp):
		print 'node response received'
		break
	else:
		print 'waiting for response...'
		pings += 1
if pings == max_pings:
	print 'node not responding--aborting!'
	sys.exit(0)

# set the beacon period
if period > 0:
	print 'setting TWR period to ' + str(period) + ' ms'
else:
	print 'disabling TWR'
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect(server_address)
values = (ord('R'), ord('t'), int(period/10)) 
packer = struct.Struct('! B B B')
packed_data = packer.pack(*values)
sock.sendall(packed_data)
sock.close()

# all done!
print 'Done!'



		


	



